@model JoinRpg.Web.Models.Schedules.SchedulePageViewModel
@{
    Layout = "_FullScreenLayout.cshtml";
    ViewBag.Title = "Расписание";
    ViewData["Header"] = Model;
    ViewData["Footer"] = Model;
}

<h1 class="page-title">@Html.ActionLink(Model.DisplayName, "Details", "Game", new { projectId = Model.ProjectId }, new {})</h1>

<ul class="nav nav-tabs">
    <li class="active"><a data-toggle="tab" href="#scheduler">Расписание</a></li>
    @if (Model.Intersections.Count > 0)
    {
        <li><a data-toggle="tab" href="#intersections">Пересечения</a></li>
    }
    @if (Model.NotAllocated.Count > 0)
    {
        <li><a data-toggle="tab" href="#notallocated">Не размещенные</a></li>
    }
</ul>
<div class="tab-content scheduler-fullscreen">
    <section id="scheduler" class="scheduler-container tab-pane in active">
        @await Html.PartialAsync("Scheduler", Model)
        <div id="scheduler-overlay" onclick="overlayClickHandler(event)" onwheel="overlayWheelHandler(event)">
            <div id="scheduler-details" all-rooms="false" no-users="false" error-mode="false">
                @await Html.PartialAsync("_AppointmentDetailsPartial")
            </div>
        </div>
    </section>
    @if (Model.Intersections.Count > 0)
    {
        <section id="intersections" class="scheduler-container tab-pane">
            @await Html.PartialAsync("Intersections", Model)
        </section>
    }
    @if (Model.NotAllocated.Count > 0)
    {
        <section id="notallocated" class="scheduler-container tab-pane">
            @await Html.PartialAsync("Notallocated", Model)
        </section>
    }
</div>

<script type="text/javascript">
    let schedulerOverlay;
    let schedulerDetails;

    function hideDetails()
    {
        schedulerOverlay.style.display = 'none';
    }

    function overlayClickHandler(ev) 
    {
        if (ev.target.id !== schedulerOverlay.id)
            return;
        hideDetails();
    }
    function overlayWheelHandler(ev)
    {
        return;
    }

    function hideIfNoContent(element, className)
    {
        className = 'details-' + className;
        if (element.innerHTML.length === 0)
            schedulerDetails.classList.add(className);
        else
            schedulerDetails.classList.remove(className);
    }

    $(document).ready(function()
    {
        schedulerOverlay = document.getElementById('scheduler-overlay');

        schedulerDetails = document.getElementById('scheduler-details');

        const detailsForm = {
            title: document.getElementById('details-title'),
            problems: document.getElementById('details-problems'),
            users: document.getElementById('details-users'),
            rooms: document.getElementById('details-rooms'),
            slots: document.getElementById('details-slots'),
            description: document.getElementById('details-info'),
            link: document.getElementById('details-link')
        };

        // Installing appointment click handler
        appointmentClickHandler = (characterId) =>
        {
            const id = `appointment${characterId}`;
            const appointmentElement = document.getElementById(id);

            schedulerDetails.setAttribute('no-users', appointmentElement.getAttribute('no-users'));
            schedulerDetails.setAttribute('all-rooms', appointmentElement.getAttribute('all-rooms'));
            schedulerDetails.setAttribute('error-mode', appointmentElement.getAttribute('error-mode'));

            detailsForm.title.innerHTML = appointmentElement.getAttribute('display-name');
            
            detailsForm.description.innerHTML = document.getElementById(id + '-description').innerHTML.trim();
            hideIfNoContent(detailsForm.description, 'no-info');

            detailsForm.problems.innerHTML = appointmentElement.getAttribute('errors');
            hideIfNoContent(detailsForm.problems, 'no-problems');

            detailsForm.users.innerHTML = document.getElementById(id + '-users').innerHTML.trim();
            hideIfNoContent(detailsForm.users, 'no-users');

            detailsForm.rooms.innerHTML = appointmentElement.getAttribute('rooms');
            hideIfNoContent(detailsForm.rooms, 'no-rooms');

            detailsForm.slots.innerHTML = appointmentElement.getAttribute('slots');
            hideIfNoContent(detailsForm.slots, 'no-slots');

            detailsForm.link.href = appointmentElement.getAttribute('details-url');

            schedulerOverlay.style.display = 'flex';
        }
    });

    function closeDetailsClickHandler()
    {
        hideDetails();
    }
</script>
@section styles {
    <link rel="stylesheet" href="~/Content/Scheduler.css" />
    <link rel="stylesheet" href="~/Content/AppointmentDetails.css"/>
}
