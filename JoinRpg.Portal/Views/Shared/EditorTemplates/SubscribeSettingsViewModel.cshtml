@using JoinRpg.Domain
@using JoinRpg.Web.App_Code
@model JoinRpg.Web.Models.CharacterGroups.SubscribeSettingsViewModel

@functions {

    private object CheckBoxEnabled(bool enabled)
    {
        return enabled ? null : new {@disabled = "disabled"};
    }

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.ProjectId)
    @Html.HiddenFor(model => model.CharacterGroupId)

<div class="form-horizontal">
    <h4>Настройки подписки на «@Model.Name»</h4>
    <hr />
    @if (Model.EnabledFlags.AnyNotSet())
    {
        <div class="alert alert-info">
            Часть подписок включены на родительских группах и не могут быть изменены здесь.
        </div>
    }
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ClaimStatusChange, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.ClaimStatusChange, CheckBoxEnabled(Model.EnabledFlags.ClaimStatusChange))
                @Html.ValidationMessageFor(model => model.ClaimStatusChange, "", new { @class = "text-danger" })
                @Html.DescriptionFor(model => model.ClaimStatusChange)
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.Comments, CheckBoxEnabled(Model.EnabledFlags.Comments))
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                @Html.DescriptionFor(model => model.Comments)
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FieldChange, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.FieldChange, CheckBoxEnabled(Model.EnabledFlags.FieldChange))
                @Html.ValidationMessageFor(model => model.FieldChange, "", new { @class = "text-danger" })
                @Html.DescriptionFor(model => model.FieldChange)
            </div>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.MoneyOperation, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.MoneyOperation, CheckBoxEnabled(Model.EnabledFlags.MoneyOperation))
                @Html.ValidationMessageFor(model => model.MoneyOperation, "", new { @class = "text-danger" })
                @Html.DescriptionFor(model => model.MoneyOperation)
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AccommodationChange, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.AccommodationChange, CheckBoxEnabled(Model.EnabledFlags.AccommodationChange))
                @Html.ValidationMessageFor(model => model.AccommodationChange, "", new { @class = "text-danger" })
                @Html.DescriptionFor(model => model.AccommodationChange)
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-12">
            <input type="submit" value="Сохранить" class="btn btn-success" />
        </div>
    </div>

</div>
}
