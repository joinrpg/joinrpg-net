@using JoinRpg.Portal;
@model JoinRpg.Web.Models.Characters.AddCharacterViewModel

@{
    ViewBag.Title = "Добавление персонажа в игру " + Model.ProjectName;
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Create", "Character", new {Model.ProjectId},  FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ProjectId)

<div class="form-horizontal">
    @if (Model.LegacyNameMode)
    {
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.ParentCharacterGroupIds, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.MagicSelectParent(model => model.ParentCharacterGroupIds)
            @Html.ValidationMessageFor(model => model.ParentCharacterGroupIds, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsPublic, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IsPublic)
            @Html.ValidationMessageFor(model => model.IsPublic, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsAcceptingClaims, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IsAcceptingClaims)
            @Html.ValidationMessageFor(model => model.IsAcceptingClaims, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HidePlayerForCharacter, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HidePlayerForCharacter)
            @Html.ValidationMessageFor(model => model.HidePlayerForCharacter, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsHot, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IsHot)
            @Html.ValidationMessageFor(model => model.IsHot, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.Partial("_EditFieldsPartial", Model.Fields)

    @if (Model.Fields.Fields.Any(f => f.HasPrice))
    {
        Html.RenderPartial("_CharacterFieldsSubtotal", Model.Fields);
    }

    <div class="form-group">
        @Html.LabelFor(model => model.ContinueCreating, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
                @Html.EditorFor(model => model.ContinueCreating)
                @Html.ValidationMessageFor(model => model.ContinueCreating, "", new { @class = "text-danger" })
                @Html.DescriptionFor(model => model.ContinueCreating)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Создать персонажа" class="btn btn-success" /> |
            @Html.ActionLink("Назад к сетке ролей", "Index", "GameGroups", new { @Model.ProjectId }, null)
        </div>
    </div>
</div>
}
