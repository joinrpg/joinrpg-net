@using JoinRpg.Web.App_Code
@using JoinRpg.Web.Models
@model UserProfileViewModel

@using (Html.BeginForm("Add", "Acl", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.HiddenFor(model => Model.UserId)

        @{ var acl = new AclViewModel()
           {
               ProjectId = Model.ProjectsToAdd.Select(p => p.ProjectId).First()
           }; }
        <div class="form-group">
            @Html.LabelFor(model => acl.ProjectId, htmlAttributes: new { @class = "control-label col-md-3", @for = "CanManageClaims" })
            <div class="col-md-8">
                
                @Html.EditorFor(model => acl.ProjectId, "ProjectDropDown", "ProjectId", new {Projects = Model.ProjectsToAdd})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => acl.CanManageClaims, htmlAttributes: new {@class = "control-label col-md-3", @for = "CanManageClaims"})
            <div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => acl.CanManageClaims, null, htmlFieldName: "CanManageClaims")
                    @Html.DescriptionFor(model => acl.CanManageClaims)
                    @Html.ValidationMessageFor(model => acl.CanManageClaims, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => acl.CanChangeFields, htmlAttributes: new {@class = "control-label col-md-3", @for = "CanChangeFields"})
            <div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => acl.CanChangeFields, null, htmlFieldName: "CanChangeFields")
                    @Html.DescriptionFor(model => acl.CanChangeFields)
                    @Html.ValidationMessageFor(model => acl.CanChangeFields, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => acl.CanChangeProjectProperties, htmlAttributes: new {@class = "control-label col-md-3", @for = "CanChangeProjectProperties"})
            <div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => acl.CanChangeProjectProperties, null, htmlFieldName: "CanChangeProjectProperties")
                    @Html.DescriptionFor(model => acl.CanChangeProjectProperties)
                    @Html.ValidationMessageFor(model => acl.CanChangeProjectProperties, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => acl.CanGrantRights, htmlAttributes: new {@class = "control-label col-md-3", @for = "CanGrantRights"})
            <div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => acl.CanGrantRights, null, htmlFieldName: "CanGrantRights")
                    @Html.DescriptionFor(model => acl.CanGrantRights)
                    @Html.ValidationMessageFor(model => acl.CanGrantRights, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => acl.CanEditRoles, htmlAttributes: new {@class = "control-label col-md-3", @for = "CanEditRoles"})
            <div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => acl.CanEditRoles, null, htmlFieldName: "CanEditRoles")
                    @Html.DescriptionFor(model => acl.CanEditRoles)
                    @Html.ValidationMessageFor(model => acl.CanEditRoles, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => acl.CanManageMoney, htmlAttributes: new {@class = "control-label col-md-3", @for = "CanManageMoney"})
            <div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => acl.CanManageMoney, null, htmlFieldName: "CanManageMoney")
                    @Html.DescriptionFor(model => acl.CanManageMoney)
                    @Html.ValidationMessageFor(model => acl.CanManageMoney, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => acl.CanSendMassMails, htmlAttributes: new {@class = "control-label col-md-3", @for = "CanSendMassMails"})
            <div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => acl.CanSendMassMails, null, htmlFieldName: "CanSendMassMails")
                    @Html.DescriptionFor(model => acl.CanSendMassMails)
                    @Html.ValidationMessageFor(model => acl.CanSendMassMails, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => acl.CanManagePlots, htmlAttributes: new {@class = "control-label col-md-3", @for = "CanManagePlots"})
            <div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => acl.CanManagePlots, null, htmlFieldName: "CanManagePlots")
                    @Html.DescriptionFor(model => acl.CanManagePlots)
                    @Html.ValidationMessageFor(model => acl.CanManagePlots, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <input type="submit" value="Добавить" class="btn btn-success"/>
    </div>

}
