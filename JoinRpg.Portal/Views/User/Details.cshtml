@using JoinRpg.Web.Areas.Admin.Models
@using JoinRpg.Web.Models
@model UserProfileViewModel

@{
  ViewBag.Title = Model.DisplayName;
}

<h2>@ViewBag.Title</h2>

<div class="container">
    
  <div class="col-md-5">
    <div class="panel panel-default">
      <div class="panel-body">
        @Html.DisplayFor(model => model.Details)

      </div>
      @if (Model.Details.HasAccess)
      {
        <div class="panel-footer" title="Почему я вижу этот профиль?">

          @Html.DisplayFor(model => model.Details.Reason)
          @if (Model.Details.Reason == AccessReason.ItsMe)
          {
            <text>[ @Html.ActionLink("Настроить", "SetupProfile", "Manage") ]</text>
          }
        </div>
      }
    </div>
  </div>
    
    

    @if (Model.ThisUserProjects.Any())
    {
        <div class="col-md-4">
            <h4>Проекты этого пользователя </h4>
            <ul>
                @foreach (var master in Model.ThisUserProjects)
                {
                    <li>
                        @Html.ActionLink(@master.Project.ProjectName, "Details", "Game", new {master.ProjectId}, null)
                        @if (master.IsOwner)
                        {
                            <span>(создатель проекта)</span>
                        }
                    </li>
                }

            </ul>
        </div>
    }
           @if (Model.HasAdminAccess)
           {
               <div class="btn-group-vertical" role="group">
                   <a href="#" class="disabled btn btn-default" style="width: 100%">Функции администратора:</a>
                   <button
                           class="btn btn-default"
                           type="button"
                           style="width: 100%"
                           data-toggle="modal" data-target="#changeEmailModal" aria-expanded="false">
                       Изменить email
                   </button>

                   @using (Html.BeginForm(
                       Model.IsAdmin ? "RevokeAdmin" : "GrantAmin",
                       "Users",
                       new {area = "Admin",}, FormMethod.Post))
                   {
                       @Html.AntiForgeryToken()
                       @Html.HiddenFor(model => model.UserId)
                       if (!Model.IsAdmin)
                       {
                           <button class="btn btn-default" type="submit"
                                   style="width: 100%"
                                   data-toggle="confirmation"
                                   data-confirm-content="Действительно выдать права администратора на сайте?"
                                   data-confirm-yesBtn="Выдать">
                               Сделать администратором
                           </button>

                       }
                       else
                       {
                           <button class="btn btn-default" type="submit"
                                   style="width: 100%"
                                   data-toggle="confirmation"
                                   data-confirm-content="Действительно убрать права администратора на сайте?"
                                   data-confirm-yesBtn="Убрать">
                               Убрать из администраторов
                           </button>

                       }
                   }

                   @using (Html.BeginForm(
                       Model.IsVerifiedUser ? "RevokeVerification" : "GrantVerification",
                       "Users",
                       new {area = "Admin",}, FormMethod.Post))
                   {
                       @Html.AntiForgeryToken()
                       @Html.HiddenFor(model => model.UserId)
                       if (!Model.IsVerifiedUser)
                       {
                           <button class="btn btn-default" type="submit"
                                   style="width: 100%"
                                   data-toggle="confirmation"
                                   data-confirm-content="Вы действительно проверили ФИО и телефон пользователя?"
                                   data-confirm-yesBtn="Подтвердить">
                               Подтвердить профиль
                           </button>

                       }
                       else
                       {
                           <button class="btn btn-default" type="submit"
                                   style="width: 100%"
                                   data-toggle="confirmation"
                                   data-confirm-content="Убрать подтверждение действительности ФИО?"
                                   data-confirm-yesBtn="Убрать">
                               Отменить подтверждение профиля
                           </button>

                       }
                   }
               </div>
           }

        
    @if (Model.Claims != null && Model.Claims.Items.Any())
    {
        @Html.Partial("..\\ClaimList\\_ClaimList", Model.Claims, new ViewDataDictionary(ViewData) {{"HideUserColumn", true}, {"HideOperations", true}})
    }
    
    <div class="panel-group">
            @if (Model.ProjectsToAdd.Any())
            {
                <button class="btn btn-default" type="button" data-toggle="collapse" data-target="#addToProject"
                        aria-expanded="false">
                    Поставить доступ в проект
                </button>
            }
        <div class="panel panel-default collapse" id="addToProject">
            <div class="panel-heading">Добавление в проект</div>
            <div class="panel-body">
                @if (Model.ProjectsToAdd.Any())
                {
                @Html.Partial("AddToProject", Model)
                }
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="changeEmailModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="ChangeEmail" asp-controller="Users" asp-area="Admin" method="post" asp-route-userId="@Model.UserId">
                {
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="deleteTitle">Изменение email</h4>
                    </div>
                    <div class="modal-body">
                        @Html.Partial("ChangeEmailForm", new ChangeEmailModel() { UserId = Model.UserId })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Отмена</button>
                        <button type="submit" class="btn btn-success" id="submit-button">Изменить email</button>
                    </div>
                }
            </form>
        </div>
    </div>
</div>
