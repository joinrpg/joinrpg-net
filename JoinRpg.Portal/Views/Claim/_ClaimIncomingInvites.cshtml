@using JoinRpg.DataModel
@using JoinRpg.Web.Helpers
@model JoinRpg.Web.Models.Accommodation.ClaimAccommodationViewModel

@if (!Model.IncomingInvite.Any())
{
    return;
}
<div class="panel panel-default" id="incomingInvite">
    <div class="panel-heading">Полученные приглашения к совместному проживанию</div>
    <div class="panel-body">
        <table class="table">


            @foreach (var accommodationInvite in Model.IncomingInvite.Where(invite => invite.IsAccepted != AccommodationRequest.InviteState.Accepted))
            {
               <tr>
                    <td>@Html.DisplayFor(model => accommodationInvite.From.Player)</td>
                    @if (accommodationInvite.IsAccepted == AccommodationRequest.InviteState.Unanswered)
                    {
                        <td>
                            <div style="display: flex">
                                @if (accommodationInvite.IsAccepted == AccommodationRequest.InviteState.Unanswered)
                                {
                                    using (Html.BeginForm("AcceptInvite", "Claim", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.Hidden("InviteId", accommodationInvite.Id)
                                        @Html.Hidden("InviteState", AccommodationRequest.InviteState.Accepted)
                                        var name = "acceptInvite_" + @accommodationInvite.Id;
                                        var targetName = "#"+ name;
                                        <button type="button" class="btn btn-xs" data-toggle="modal" data-target="@targetName"><i class="glyphicon glyphicon-check text-success"></i>&nbsp;Принять</button>
                                        @Html.ConfirmDialog(name, "Принять приглашение к совместному проживанию?", "Подтвердите действие", "Да", "Нет")
                                    }
                                }
                                <div style="width: 10px"></div>
                                @if (accommodationInvite.IsAccepted == AccommodationRequest.InviteState.Unanswered)
                                {
                                    using (Html.BeginForm("DeclineInvite", "Claim", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.Hidden("InviteId", accommodationInvite.Id)
                                        @Html.Hidden("InviteState", AccommodationRequest.InviteState.Declined)
                                        var name = "cancelInvite_" + @accommodationInvite.Id;
                                        var targetName = "#"+ name;
                                <button type="button" class="btn btn-xs" data-toggle="modal" data-target="@targetName"><i class="glyphicon glyphicon-ban-circle text-danger"></i>&nbsp;Отменить</button>
                                        @Html.ConfirmDialog(name, "Отказаться от совместного проживания?", "Подтвердите действие", "Да", "Нет")
                                    }
                                }
                            </div>
                        </td>
                    }
                    else
                    {
                        <td class="@accommodationInvite.IsAccepted.GetAppropriateTextStyle()">  @accommodationInvite.IsAccepted.GetDescription() </td>
                    }
                </tr>
            }
        </table>
    </div>
</div>
