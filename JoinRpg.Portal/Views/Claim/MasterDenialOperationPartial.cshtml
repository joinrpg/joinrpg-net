@model JoinRpg.Web.Models.MasterDenialOperationViewModel


@using JoinRpg.Web.Models

@{
    Model.ActionName = Model.ActionName ?? "Отправить";
    Model.DeleteCharacter = Model.CharacterAutoCreated
        ? MasterDenialExtraActionViewModel.DeleteCharacter : MasterDenialExtraActionViewModel.KeepCharacter;
}

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.DenialStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DenialStatus, new { @class = "form-control" })
            @Html.DescriptionFor(model => model.DenialStatus)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CommentText, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CommentText, new { htmlAttributes = new { @class = "form-control" } })
            <div class="help-block">
                Сопроводите отклонение заявки объяснением ситуации для игрока.
                @if (Model.ClaimStatus == ClaimStatusView.AddedByUser || Model.ClaimStatus == ClaimStatusView.Discussed)
                {
                    <text>
                        <br />
                        Возможно, игроку будет приятнее, если вы вместо отклонения заявки предложите ему альтернативную роль,
                        воспользовавшись функцией перевода заявки на другую роль/группу.
                    </text>
                }
            </div>
        </div>
    </div>

    @if (Model.ClaimStatus == ClaimStatusView.Approved)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.DeleteCharacter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.DeleteCharacter, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DeleteCharacter, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="@Model.ActionName" class="btn btn-success" />
        </div>
    </div>

</div>
