@using JoinRpg.Web.Models.Accomodation
@model JoinRpg.Web.Models.Accomodation.ProjectAccomodationVewModel
@{
    ViewBag.IsInEditMode = false;
    ViewBag.ActionName = "Добавить";
    if (Model.Id != 0)
    {
        ViewBag.Title = "Редактирование помещения для " + ViewBag.AccomodationName;
        <h2>@ViewBag.Title</h2>
        ViewBag.ActionName = "Изменить";
        ViewBag.IsInEditMode = true;
    }
}
@using (Html.BeginForm("ProjectAccomodationEdit", "AccomodationType", new { projectId = Model.ProjectId, Id = Model.Id, AccomodationTypeId = Model.AccomodationTypeId }, FormMethod.Post))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @if (!ViewBag.IsInEditMode)
        {
            <h4>Новое помещение</h4>
            <hr />
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IsInfinite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsInfinite, new { htmlAttributes = new { @class = "form-control" } })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsAutofilledAccomodation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsAutofilledAccomodation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsPlayerSelectable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsPlayerSelectable, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                @if (ViewBag.IsInEditMode)
                {
                    @Html.RouteLink("Назад", new { projectId = Model.ProjectId, accomodationId = Model.AccomodationTypeId, action = "Edit", Controller = "AccomodationType" }, new { @class = "btn btn-default pull-right" })
                }

                <button type="submit" class="btn btn-primary pull-right">@ViewBag.ActionName</button>

            </div>
        </div>
        @if (!ViewBag.IsInEditMode)
        {

        }
    </div>
}
