@using JoinRpg.Web.App_Code
@using JoinRpg.Web.Models
@model JoinRpg.Web.Models.GameFieldListViewModel

@{
    ViewBag.Title = "Поля персонажа / заявки";
}

<h2>
    @ViewBag.Title
@if (Model.CanEditFields)
{
<a href="@Url.Action("Create", new {Model.ProjectId})" class="btn btn-success"><span class="glyphicon glyphicon-plus"></span>Добавить новое поле</a>
}
</h2>
@{
    var firstItem = Model.Items.FirstOrDefault();
}
@if (firstItem != null)
{
    <table class="table" style="margin-top: 1em">
        <tr>
            <th>
                @Html.DisplayNameFor(model => firstItem.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => firstItem.FieldViewType)
            </th>
            <th style="white-space: nowrap">
                @Html.DisplayNameFor(model => firstItem.FieldBoundTo)
            </th>
            <th>
                @Html.DisplayNameFor(model => firstItem.IsPublic)
            </th>
            <th>
                @Html.DisplayNameFor(model => firstItem.CanPlayerView)
            </th>
            <th>
                @Html.DisplayNameFor(model => firstItem.CanPlayerEdit)
            </th>
            <th>
                @Html.DisplayNameFor(model => firstItem.Description)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Items)
        {
            <tr class="@(item.IsActive ? "" : "deleted")">
                <td >
                    @Html.DisplayFor(modelItem => item.Name)
                    @Html.DisplayFor(modelItem => item.MandatoryStatus)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FieldViewType)
                </td>
                <td>
                    @Html.DisplayFor(model => item.FieldBoundTo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsPublic)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CanPlayerView)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CanPlayerEdit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>

                <td>
                    @if (item.MandatoryStatus != MandatoryStatusViewType.Optional)
                    {
                        @Html.ActionLink("Отчет (непроставленные)", "CharListByField", "ClaimList", new {item.ProjectFieldId, item.ProjectId}, null)
                    }
                    @if (item.MandatoryStatus != MandatoryStatusViewType.Optional && Model.CanEditFields)
                    {
                        <text> | </text>
                    }
                    @if (Model.CanEditFields)
                    {
                        if (item.IsActive)
                        {
                            @Html.ActionLink("Изменить", "Edit", new {item.ProjectFieldId, item.ProjectId})<text> | </text>
                            @Html.ActionLink("Удалить", "Delete", new {item.ProjectFieldId, item.ProjectId})
                        }
                        else
                        {
                            @Html.ActionLink("Восстановить", "Edit", new {item.ProjectFieldId, item.ProjectId})
                        }<text> </text>
                        @Html.MoveControl(model => item, "Move")
                    }
                </td>
            </tr>
        }

    </table>
}