@using JoinRpg.Web.App_Code
@using JoinRpg.Web.Models.Plot
@model EditPlotFolderViewModel

@{
    ViewBag.Title = "Сюжет «" + Model.PlotFolderMasterTitle + "»";
}

<h2>@ViewBag.Title</h2>
@if (Model.TagNames.Any())
{
    foreach (var tagName in Model.TagNames)
    {
        @Html.ActionLink("#" + tagName, "ByTag", "Plot", new { Model.ProjectId, tagName }, null)
        <text> </text>
    }
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PlotFolderId)
        @Html.HiddenFor(model => model.ProjectId)
        @if (Model.HasEditAccess)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.PlotFolderTitleAndTags, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.EditorFor(model => model.PlotFolderTitleAndTags, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PlotFolderTitleAndTags, "", new { @class = "text-danger" })
                    @Html.DescriptionFor(model => model.PlotFolderTitleAndTags)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TodoField, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TodoField, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TodoField, "", new { @class = "text-danger" })
                    @Html.DescriptionFor(model => model.TodoField)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="@(Model.Status == PlotStatus.Deleted ? "Восстановить" : "Сохранить")" class="btn btn-success" />
                    |
                    @Html.ActionLink("Назад к списку сюжетов", "Index", new { Model.ProjectId }, null)
                </div>
            </div>
        }
        else
        {
            if (Model.HasMasterAccess && !string.IsNullOrWhiteSpace(Model.TodoField))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.TodoField, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(model => model.TodoField, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.DescriptionFor(model => model.TodoField)
                    </div>
                </div>
            }
        }
    </div>
}
<hr />
<h3>
    Вводные
    @if (Model.HasMasterAccess)
    {
        <a href="@Url.Action("CreateElement", new {Model.PlotFolderId, Model.ProjectId})" class="btn btn-success"><span class="glyphicon glyphicon-plus"></span>Добавить вводную...</a>
        <a href="@Url.Action("CreateHandout", new {Model.PlotFolderId, Model.ProjectId})" class="btn btn-success"><span class="glyphicon glyphicon-plus"></span>Добавить элемент раздатки...</a>
    }
</h3>

@Html.Partial("_PlotElements", Model.Elements)

@Html.Partial("_PublishPlotElementDlg", new PublishPlotElementViewModel(Model))
@Html.Partial("_DeletePlotElementDlg", Model)
@Html.Partial("_UnpublishPlotElementDlg", Model)
@Html.Partial("_RestorePlotElementDlg", Model)


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
