@using JoinRpg.Web.App_Code
@using JoinRpg.Web.Models
@model FinanceSetupViewModel

@{
  ViewBag.Title = "Настройка финансов проекта " + Model.ProjectName;
  var first = Model.PaymentTypes.FirstOrDefault();
  var firstFee = Model.FeeSettings.FirstOrDefault();
}

<h2>@ViewBag.Title</h2>

@if (Model.PaymentTypes.Any() && !Model.FeeSettings.Any())
{
    <div class="alert alert-danger">
        Необходимо настроить размеры взносов, прежде чем принимать их.
    </div>
}
else if (!Model.PaymentTypes.Any(pt => pt.IsActive) && Model.FeeSettings.Any())
{
    <div class="alert alert-danger">
        Необходимо настроить хотя бы один метод оплаты, прежде чем принимать взносы.
    </div>
}

<div class="panel-group" id="elementsaccordion" role="tablist" aria-multiselectable="true">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4>
                <a role="button" data-toggle="collapse" data-parent="#elementsaccordion" href="#setupFee">
                    Взнос и сроки
                </a>
            </h4>
        </div>
        <div class="panel-collapse collapse" id="setupFee" role="tabpanel">
            <div class="panel-body">
                
                @if (!Model.FeeSettings.Any())
                {
                    <p class="alert alert-info">
                        Коллеги! Если вы оказались в этом разделе, то, скорее всего, хотите настроить размер взноса для вашей игры для того чтобы 
                        покрыть расходы на ее проведение. Мы просим вас на секунду задуматься о том, как покрываются расходы на работу Joinrpg.ru. 
                        Это бесплатный для игроков и мастеров сайт, рекламы на нем нет и не будет. Мы существуем за счет пожертвований и были бы 
                        очень благодарны, если бы вы сочли возможным повысить ваш взнос всего на 50 рублей, и <a href="@Url.Action("HowToHelp", "Home")">
                        пожертвовать эти деньги</a> на наш сайт. Так мы сможем покрыть расходы на хостинг, не залезая в личные деньги, а при 
                        удаче — и отложить что-то на развитие.
                    </p>
                }
                else
                {
                <p>Изменение взноса не влияет на уже оплаченные заявки. Возможно удалить только взнос, который еще не вступил в силу.</p>
                    <table class="table">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => firstFee.Fee)
                            </th>
                            @if (Model.GlobalSettings.PreferentialFeeEnabled)
                            {
                                <th>
                                    @Html.DisplayNameFor(model => firstFee.PreferentialFee)
                                </th>
                            }
                            <th>
                                @Html.DisplayNameFor(model => firstFee.StartDate)
                            </th>
                            <th></th>
                        </tr>

                        @foreach (var item in Model.FeeSettings)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Fee)
                                </td>
                                @if (Model.GlobalSettings.PreferentialFeeEnabled)
                                {
                                    <td>
                                        @(item.PreferentialFee ?? item.Fee)
                                    </td>
                                }
                                <td>
                                    @item.StartDate.ToShortDateString()
                                </td>
                                <td>
                                    @if (item.IsActual && Model.HasEditAccess)
                                    {
                                        <button type="button" class="btn btn-danger btn-sm"
                                                data-toggle="modal"
                                                data-target="#deleteFeeSetting"
                                                data-element="@item.ProjectFeeSettingId">
                                            <span class="glyphicon glyphicon-trash"></span>Удалить..
                                        </button>
                                    }
                                </td>
                            </tr>
                        }
                    </table>
                }
                
                @if (Model.HasEditAccess)
                {

                    <button type="button" class="btn btn-success"
                            data-toggle="modal"
                            data-target="#addFeeSettingModal">
                        <span class="glyphicon glyphicon-plus"></span>Добавить новый размер взноса ...
                    </button>

                }
 
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4>
                <a role="button" data-toggle="collapse" data-parent="#elementsaccordion" href="#setupPayment">
                    Методы оплаты
                </a>
            </h4>

        </div>
        <div class="panel-collapse collapse" role="tabpanel" id="setupPayment">
            <div class="panel-body">

                @if (Model.HasEditAccess)
                {
                    <p>
                        <button type="button" class="btn btn-success"
                                data-toggle="modal"
                                data-target="#addPaymentTypeModal">
                            <span class="glyphicon glyphicon-plus"></span>Добавить способ оплаты...
                        </button>
                    </p>
                }
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => first.Name)
                        </th>
                        @if (Model.HasEditAccess)
                        {
                            <th></th>
                        }
                    </tr>

                    @foreach (var item in Model.PaymentTypes)
                    {
                        <tr>
                            <td class="@(item.IsActive ? "" : "deleted")">
                                @if (item.IsCash)
                                {<text>
                                     Наличными
                                 </text>
                                }
                                else
                                {
                                    @Html.DisplayFor(modelItem => item.Name)
                                }
                                @Html.DisplayFor(modelItem => item.Master)
                                @if (item.IsDefault)
                                {
                                    <div class="label label-default">По умолчанию</div>
                                }
                            </td>
                            @if (Model.HasEditAccess)
                            {
                                <td>
                                    @if (item.IsActive)
                                    {
                                        if (!item.IsCash)
                                        {
                                            <a href="@Url.Action("EditPaymentType", new {item.ProjectId, item.PaymentTypeId})" class="btn btn-default">Изменить</a>
                                        }
                                        var deleteActionName = item.CanBePermanentlyDeleted ? "Удалить" : "Выключить";
                                        <button type="button" class="btn btn-danger btn-sm"
                                                data-toggle="modal"
                                                data-target="#deleteElementModal"
                                                data-element="@item.PaymentTypeId"
                                                data-name="@item.Name"
                                                data-actionname="@deleteActionName">
                                            @deleteActionName
                                        </button>
                                    }
                                    else
                                    {
                                        var id = item.PaymentTypeId ?? -item.Master.UserId;
                                        <button type="button" class="btn btn-default btn-sm"
                                                data-toggle="modal"
                                                data-target="#deleteElementModal"
                                                data-element="@id"
                                                data-name="@item.Name"
                                                data-actionname="Включить">
                                            Включить
                                        </button>
                                    }
                                </td>
                            }
                        </tr>
                    }

                </table>

            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4>
                <a role="button" data-toggle="collapse" data-parent="#elementsaccordion" href="#changeSettings">
                    Общие настройки
                </a>
            </h4>

        </div>
        <div class="panel-collapse collapse" role="tabpanel" id="changeSettings">
            <div class="panel-body">
               @using (Html.BeginForm("ChangeSettings", "Finances"))
               {
                   var model = Model.GlobalSettings;
                   @Html.AntiForgeryToken()
                   @Html.HiddenFor(item => model.ProjectId)

                   <div class="form-group">
                       @Html.LabelFor(item => model.WarnOnOverPayment, htmlAttributes: new { @class = "control-label col-md-2" })
                       <div class="col-md-10">
                           @Html.EditorFor(item => model.WarnOnOverPayment)
                           @Html.ValidationMessageFor(item => model.WarnOnOverPayment, "", new { @class = "text-danger" })
                           @Html.DescriptionFor(item => model.WarnOnOverPayment)
                       </div>
                   </div>

                   <div class="form-group">
                       @Html.LabelFor(item => model.PreferentialFeeEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                       <div class="col-md-10">
                           @Html.EditorFor(item => model.PreferentialFeeEnabled)
                           @Html.ValidationMessageFor(item => model.PreferentialFeeEnabled, "", new { @class = "text-danger" })
                           @Html.DescriptionFor(item => model.PreferentialFeeEnabled)
                       </div>
                   </div>

                   <div class="form-group">
                       @Html.LabelFor(item => model.PreferentialFeeConditions, htmlAttributes: new { @class = "control-label col-md-2" })
                       <div class="col-md-10">
                           @Html.EditorFor(item => model.PreferentialFeeConditions)
                           @Html.ValidationMessageFor(item => model.PreferentialFeeConditions, "", new { @class = "text-danger" })
                           @Html.DescriptionFor(item => model.PreferentialFeeConditions)
                       </div>
                   </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Сохранить" class="btn btn-success" />
                    </div>
                </div>
               }
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4>
                <a role="button" data-toggle="collapse" data-parent="#elementsaccordion" href="#gooleDocs">
                    Синхронизация с GoogleDocs
                </a>
            </h4>

        </div>
        <div class="panel-collapse collapse" role="tabpanel" id="gooleDocs">
            <div class="panel-body">
                Для тех мастерских групп, которые ведут свой бюджет в <a href="https://docs.google.com/spreadsheets/">Google Таблицах</a>.<br/>
                Создайте в вашем бюджете отдельную вкладку (например, взносы из Joinrpg).
                В любой ячейке (например, А1), введите
                <br/>
                <code>
                    =IMPORTDATA("@(RouteHelper.GetFullHostName() + Url.Action("SummaryByMaster", new { token = Model.CurrentUserToken, Model.ProjectId }))")
                </code>.
                <br/>
                Учтите, что обновление происходит с некоторой задержкой (раз в несколько часов). Подробности можно узнать в <a href="https://support.google.com/docs/answer/3093335?hl=ru">справке Google Таблиц</a>.
            </div>
        </div>
    </div>

</div>

<div class="modal fade" id="addFeeSettingModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("CreateFeeSetting", "Finances", FormMethod.Post))
            {
                var localModel = new CreateProjectFeeSettingViewModel() {ProjectId = Model.ProjectId, PreferentialFeeEnabled = Model.GlobalSettings.PreferentialFeeEnabled};


            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="deleteTitle">Добавление нового размера взноса оплаты</h4>
            </div>
                <div class="modal-body">
                    <p>
                        Выберите размер взноса и с какого числа он вступает в силу.
                    </p>

                    @Html.Partial("CreateFeeSettingPartial", localModel)
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Отмена</button>
                    <button type="submit" class="btn btn-success" id="submit-button">Добавить</button>
                </div>
            }
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>


<div class="modal fade" id="addPaymentTypeModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("CreatePaymentType", "Finances", FormMethod.Post))
            {
                var localModel = new CreatePaymentTypeViewModel() {ProjectId = Model.ProjectId, Masters = Model.Masters};


                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="deleteTitle">Добавление безналичного метода оплаты</h4>
                </div>
                <div class="modal-body">
                    <p>
                        Выберите название и ответственного за это мастера.
                    </p>

                    @Html.Partial("CreatePaymentTypePartial", localModel)

                   

                </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Отмена</button>
                <button type="submit" class="btn btn-success" id="submit-button">Добавить</button>
            </div>
            }
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

<div class="modal fade" id="deleteElementModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("TogglePaymentType", "Finances", new {Model.ProjectId}, FormMethod.Post))
            {
                <input type="hidden" name="paymentTypeId" id="elementId" value="0"/>
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="deleteTitle">Удаление метода оплаты</h4>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Отмена</button>
                    <button type="submit" class="btn btn-default" id="submit-button">Удалить</button>
                </div>
            }
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

<div class="modal fade" id="deleteFeeSetting" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("DeleteFeeSetting", "Finances", new { Model.ProjectId }, FormMethod.Post))
            {
            <input type="hidden" name="projectFeeSettingId" id="elementId" value="0" />
            @Html.AntiForgeryToken()
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="deleteTitle">Удаление размера взноса</h4>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Отмена</button>
                <button type="submit" class="btn btn-danger" id="submit-button">Удалить</button>
            </div>
            }
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

@section scripts {
    <script type="text/javascript" defer>
        $('#deleteElementModal')
            .on('show.bs.modal',
                function(event) {
                    var button = $(event.relatedTarget);
                    var plotElementId = button.data('element');
                    var modal = $(this);
                    modal.find('#elementId').val(plotElementId);

                    modal.find("#deleteTitle")
                        .text(button.data('actionname') + ' метод оплаты «' + button.data('name') + '»');
                    modal.find("#submit-button").text(button.data('actionname'));
                });

        $('#deleteFeeSetting')
           .on('show.bs.modal',
               function (event) {
                   var button = $(event.relatedTarget);
                   var plotElementId = button.data('element');
                   var modal = $(this);
                   modal.find('#elementId').val(plotElementId);
               });
    </script>
}
