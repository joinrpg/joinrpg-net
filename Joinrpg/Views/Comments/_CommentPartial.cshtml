@using JoinRpg.CommonUI.Models
@using JoinRpg.DataModel
@using JoinRpg.Web.Models
@model CommentViewModel

@helper ShowCommentWithTree(CommentViewModel comment, int deepLevel)
{
if (!comment.IsVisible)
{
    return;
}
var hideClassName = !comment.IsVisibleToPlayer ? "world-object-hidden" : "";
    <div class="" style="clear: both" id="comment@(comment.CommentId)">
        <table>
            <tr>
                <td class="hidden-xs" style="vertical-align: text-top">
                    @Html.Partial("DisplayTemplates/UserAvatar", comment.Author)
                </td>
                <td>
                    <div class="@hideClassName" style="margin-bottom: 1em;">
                        <div class="">
                            @if (comment.IsCommentByPlayer)
                            {
                                <span>Игрок</span>
                            }
                            else
                            {
                                <span>Мастер</span>
                            }
                            @Html.DisplayFor(model => comment.Author) написал(а) @Html.DisplayFor(c => comment.CreatedTime, "EventTime")

                            @if (!comment.IsVisibleToPlayer)
                            {
                                <strong>
                                    <span>другим мастерам</span>
                                </strong>
                            }

                            @if (!comment.IsRead)
                            {
                                <span class="label label-default" title="Новый комментарий">New</span>
                            }

                            <a href="@Url.Action("RedirectToDiscussion", "Forum", new {comment.ProjectId, comment.CommentId})">#</a>

                            @if (comment.HasMasterAccess && !comment.ChildComments.Any() && comment.IsVisibleToPlayer && !comment.IsCommentByPlayer)
                            {
                            <a href="@Url.Action("ConcealComment", "Forum", new { comment.ProjectId, comment.CommentId, comment.CommentDiscussionId})" class="glyphicon glyphicon-eye-close" title="Скрыть комментарий от игрока"></a>
                            }

                        </div>
                        @if (comment.Finance != null)
                        {
                            if (Model.Finance.FeeChange != 0)
                            {
                                <span><b>Изменение взноса</b>: @Model.Finance.FeeChange &#8381;</span>
                                <br/>
                            }
                            if (Model.Finance.MoneyAmount > 0)
                            {
                                <span><b>Оплата денег игроком</b>: @Model.Finance.MoneyAmount &#8381;</span>
                                <br/>
                            }
                            else if (Model.Finance.MoneyAmount < 0)
                            {
                                <span><b>Возврат денег игроку</b>: @Model.Finance.MoneyAmount &#8381;</span>
                                <br/>
                            }
                            <span><b>Дата операции</b>: @Model.Finance.OperationDate.ToShortDateString()</span>
                            <br/>
                            if (Model.Finance.PaymentType != null)
                            {
                                <span><b>Способ оплаты</b>: @Model.Finance.PaymentType.GetDisplayName()</span>
                                <br/>
                            }

                            if (Model.Finance.State == FinanceOperationState.Declined)
                            {
                                <span class="label label-warning">Мастер не подтверждает оплату</span>
                                <br/>
                            }
                            else if (Model.Finance.State == FinanceOperationState.Proposed)
                            {
                                if (comment.ShowFinanceModeration)
                                {
                                    <a data-toggle="collapse"
                                       href="#answerComment@( comment.CommentId)" class="btn btn-warning btn-xs">
                                        Подтвердить / отклонить
                                    </a>
                                }
                                else
                                {
                                    <span class="label label-default">Ждет одобрения мастером</span>
                                    <br/>
                                }
                            }
                        }

                        @if (comment.ExtraAction != null)
                        {
                        <b>@Html.DisplayFor(model => comment.ExtraAction)</b>
                        }

                        <div>@comment.CommentText</div>
                        <a data-toggle="collapse"
                           href="#answerComment@(comment.CommentId)">
                            Ответить
                        </a>
                        <div id="answerComment@(comment.CommentId)" class="collapse">
                            @using (Html.BeginForm("CreateComment", "Forum", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                @Html.Partial("..\\Comments\\AddCommentPartial", new AddCommentViewModel
                           {
                               ProjectId = comment.ProjectId,
                               CommentDiscussionId = comment.CommentDiscussionId,
                               ParentCommentId = comment.CommentId,
                               EnableFinanceAction = comment.ShowFinanceModeration,
                               EnableHideFromUser = comment.HasMasterAccess,
                               HideFromUser = !comment.IsVisibleToPlayer
                           })
                            }
                        </div>
                    </div>
                </td>
            </tr>
        </table>
    
    
    
        <div>
           
            @foreach (var childComment in comment.ChildComments)
            {
                var style = deepLevel < 4 ? "margin-left:2em" : "";
            <div style="@style">
                @ShowCommentWithTree(childComment, deepLevel + 1)
            </div>
            }
        </div>
    
</div>
}

@ShowCommentWithTree(Model, 0)
