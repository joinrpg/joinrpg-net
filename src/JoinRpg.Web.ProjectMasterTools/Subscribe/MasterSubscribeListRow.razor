<tr>
    <td>
        <a asp-controller="GameSubscribe" asp-action="EditRedirect" asp-route-projectId="@Model.ProjectId" asp-route-subscriptionId="@Model.UserSubscriptionId">
            <span class="glyphicon glyphicon-pushpin"></span>
        </a>
        <a href="@Model.Link">
            @Model.Name
        </a>

    </td>
    <td>
        @if (Model.Options.AllSet)
        {
            <JoinBadge Variation="VariationStyleEnum.Success">Любые изменения</JoinBadge>
        }
        else
        {
            var options = Model.Options;
            <JoinBadge @bind-For="options.ClaimStatusChange" Variation="@VariationStyleEnum.Success" />
            <JoinBadge @bind-For="options.Comments" Variation="@VariationStyleEnum.Success" />
            <JoinBadge @bind-For="options.FieldChange" Variation="@VariationStyleEnum.Success" />
            <JoinBadge @bind-For="options.MoneyOperation" Variation="@VariationStyleEnum.Success" />
            <JoinBadge @bind-For="options.AccommodationChange" Variation="@VariationStyleEnum.Success" />
    }
  </td>
  <td>
   <JoinButton Preset="ButtonPreset.Delete" 
      OnClick="() => OnRemoveCallback.InvokeAsync(Model)"
      Label="Отписаться" />
  </td>
</tr>
@code {

    [Parameter]
    public SubscribeListItemViewModel Model { get; set; } = null!;

    [Parameter]
    public EventCallback<SubscribeListItemViewModel> OnRemoveCallback { get; set; }
}
