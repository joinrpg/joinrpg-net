@page "/{projectId:int}/mass-convert-to-slot"

@namespace JoinRpg.Portal.Pages.GamePages
@using JoinRpg.Web.ProjectCommon;
@model MassConvertToSlotModel

<h2>Преобразовать группы с заявками в шаблоны персонажей</h2>

<div class="alert alert-info">
    <h4>Зачем создавать @Html.HelpLink("characters/slots.html", "шаблон персонажей"):</h4>
    <ul>
        <li>В дальнейшем прямые заявки в группу поддерживаться не будут</li>
        <li>Шаблон персонажа позволяют заранее задать любые необходимые поля</li>
        <li>В какой-то момент эти изменения будут внесены автоматически, так что предлагаю не дожидаться.</li>
    </ul>
    <h4>Изменения</h4>
    <p>Изменения затронут все группы в проекте, в которых были разрешены прямые заявки, или они уже были поданы. Вот список этих групп:</p>
    <ul>
        @foreach (var group in Model.GroupsToChange)
        {
            <li>@(await Html.RenderComponentAsync<CharacterGroupLink>(RenderMode.Static, new { Model = group })) </li>
        }
    </ul>
    <p>Будут сделаны следующие изменения:</p>
    <ul>
        <li>Для этих групп будет создан шаблон персонажей с названием «Заявки — НАЗВАНИЕ ГРУППЫ»</li>
        <li>Если настроек лимита не было, а все заявки были неактивными, то шаблон все равно будет создан, но неактивным</li>
        <li>В шаблон будут перенесены все заявки, поданные в группу (если они были)</li>
        <li>В шаблон же будут перенесены настройки лимита (если они были)</li>
        <li>Прямые заявки в группу будут закрыты (включить их обратно будет нельзя)</li>
    </ul>
</div>

<form method="post">
    <div class="form-horizontal">
        @Html.HiddenFor(model => model.ProjectId)
        @Html.AntiForgeryToken()

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Создать шаблон персонажей" class="btn btn-success" />
            </div>
        </div>
    </div>
</form>
