@using JoinRpg.Portal
@using JoinRpg.Web.Models.CommonTypes
@using JoinRpg.Web.Models.CharacterGroups
@model JoinRpg.Web.Models.Money.CreateMoneyTransferViewModel

@{
    ViewBag.Title = "Перевод денег от мастера к мастеру";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h2>Перевод денег от мастера к мастеру</h2>
        @if (!Model.HasAdminAccess)
        {
            <div class="alert alert-info">Вы можете отмечать переводы только со своим участием.</div>
        }
        <hr />
        @Html.HiddenFor(model => model.ProjectId)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Sender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <component type="typeof(JoinRpg.Web.ProjectCommon.MasterSelector)"
                           param-Name="nameof(Model.Sender)"
                           param-ProjectId="@Model.ProjectId"
                           render-mode="Static" />
                @Html.ValidationMessageFor(model => model.Sender, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Receiver, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                <component type="typeof(JoinRpg.Web.ProjectCommon.MasterSelector)"
                           param-Name="nameof(Model.Receiver)"
                           param-ProjectId="@Model.ProjectId"
                           render-mode="Static" />
                    @Html.ValidationMessageFor(model => model.Receiver, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Money, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Money, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Money, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OperationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="OperationDate"
                       name="OperationDate"
                       data-provide="datepicker"
                       class="datepicker form-control"
                       data-date-end-date="0d"
                       data-date-format="dd.mm.yyyy"
                       value="@DateTime.Now.ToString("dd.MM.yyyy")"/>
                @Html.ValidationMessageFor(model => model.OperationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CommentText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CommentText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.DescriptionFor(model => model.CommentText)
                @Html.ValidationMessageFor(model => model.CommentText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Отправить" class="btn btn-success" />
                
            </div>
        </div>
    </div>
}
