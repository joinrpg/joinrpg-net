@using JoinRpg.PrimitiveTypes
@model JoinRpg.Web.Models.Plot.AddPlotElementViewModel

@{
    ViewBag.Title = "Добавить вводную";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("")) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(p => p.ProjectId)
        @Html.HiddenFor(p => p.ElementType)

        <div class="form-group">
            @Html.LabelFor(model => model.ElementType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ElementType)
                @Html.DescriptionFor(model => model.ElementType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlotFolderId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <component type="typeof(JoinRpg.Web.Plots.PlotFolderSelector)"
                param-Name="nameof(Model.PlotFolderId)"
                param-ProjectId="@(new ProjectIdentification(Model.ProjectId))"
                param-SelectedId="@Model.PlotFolderId"
                render-mode="Static" />
                @Html.DescriptionFor(model => model.PlotFolderId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TodoField, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.TodoField, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.TodoField, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Targets, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DescriptionFor(model => model.Targets)
                @Html.MagicSelectBind(model => model.Targets)
                @Html.ValidationMessageFor(model => model.Targets, "", new {@class = "text-danger"})
            </div>
        </div>

        @if (Model.HasPlotEditAccess)
        {

           <div class="form-group">
                @Html.LabelFor(model => model.PublishNow, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DescriptionFor(model => model.PublishNow)
                @Html.CheckBoxFor(model => model.PublishNow)
                @Html.ValidationMessageFor(model => model.PublishNow, "", new { @class = "text-danger" })
            </div>
          </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Добавить вводную" class="btn btn-success" />
            </div>
        </div>
    </div>
}

