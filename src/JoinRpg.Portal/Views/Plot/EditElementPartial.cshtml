@using JoinRpg.Web.Models.Plot
@using JoinRpg.Web.Plots
@model PlotElementListItemViewModel

@if (!Model.HasMasterAccess && Model.Status != PlotStatus.Completed)
{
    return;
}

@if (Model.PrintMode)
{
    @Model.Content
    @if (string.IsNullOrWhiteSpace(Model.Content.ToHtmlString()))
    {
        <i>Вводная пуста</i>
    }

    return;
}
<div class="panel panel-default">
    <div class="panel-heading">


        @if (Model.HasMasterAccess)
        {
            <component type="typeof(PlotStatusBadge)"
            render-mode="Static"
            param-Status="@Model.Status" />
        }

        <component type="typeof(PlotElementTypeBadge)"
                   render-mode="Static"
                   param-ElementType="@Model.ElementType" />

        @if (Model.HasMasterAccess)
        {

          <component type="typeof(PlotTodoBadge)"
                   render-mode="Static"
                   param-Todo="@Model.TodoField" />

        }
        <span class="h4 @(Model.Status == PlotStatus.Deleted ? "s" : "")">
            <a role="button" data-toggle="collapse" data-parent="#elementsaccordion" href="#panelPlotElement@(Model.PlotElementId)">@Model.ShortContent</a>
        </span>
        @if (Model.HasMasterAccess)
        {
            <span>
                <b>Изменено: </b>
                @Html.DisplayFor(model => model.ModifiedDateTime)
                @if (Model.Author != null)
                {
                    @Html.DisplayFor(model => model.Author)
                }
            </span>
        }
        <div>
            <b>Для</b>
            @if (Model.TargetsForDisplay.Any())
            {
                foreach (var target in Model.TargetsForDisplay)
                {
                    @Html.DisplayFor(model => target)
                }
            }
            else
            {
                <span>Не установлено</span>
            }
        </div>
        @if (Model.HasMasterAccess)
        {
            if (Model.ThisPublished && Model.Status != PlotStatus.Completed)
            {
                <div><b>Опубликованная версия вводной</b>.</div>
            }
        }
    </div>
    @{
      var collapseClass = "collapse";
        if (ViewBag.PlotElementUncollapse == Model.PlotElementId)
        {
            collapseClass = "";
        }
    }
    <div class="panel-collapse @collapseClass" id="panelPlotElement@(Model.PlotElementId)" role="tabpanel">
        <div class="panel-body">

            @if (Model.HasMasterAccess)
            {
                if (Model.PublishedVersion < Model.CurrentVersion)
                {
                    <a href="@Url.Action("ShowElementVersion", new {Model.ProjectId, Model.PlotFolderId, Model.PlotElementId, Version = Model.PublishedVersion})"
                       class="btn btn-default btn-sm"
                       title="Предыдущая версия (опубликованная)">
                        <span class="glyphicon glyphicon-fast-backward"></span>
                        @Html.DisplayFor(model => model.PrevModifiedDateTime) — опубликованная версия
                    </a>
                }
                if (Model.PrevModifiedDateTime != null && (Model.PublishedVersion != Model.CurrentVersion - 1 || Model.PublishedVersion == null))
                {
                    <a href="@Url.Action("ShowElementVersion", new {Model.ProjectId, Model.PlotFolderId, Model.PlotElementId, Version = Model.CurrentVersion - 1})"
                       class="btn btn-default btn-sm"
                       title="Предыдущая версия">
                        <span class="glyphicon glyphicon-step-backward"></span>
                        @Html.DisplayFor(model => model.PrevModifiedDateTime)
                    </a>
                }
                <a
                  asp-action="ShowElementVersion"
                  asp-controller="Plot"
                  asp-route-ProjectId="@Model.ProjectId"
                  asp-route-PlotFolderId="@Model.PlotFolderId"
                  asp-route-PlotElementId="@Model.PlotElementId"
                  asp-route-Version="@Model.CurrentVersion"
                  asp-route-PrintMode="true"
                  class="btn btn-default btn-sm">
                    <span class="glyphicon glyphicon-print"></span>
                    Печать
                </a>
                if (Model.NextModifiedDateTime == null)
                {
                    <a class="btn btn-default btn-sm"
                       href="@Url.Action("EditElement", "Plot", new {Model.PlotElementId, Model.PlotFolderId, Model.ProjectId}, null)">
                        <span class="glyphicon glyphicon-pencil"></span>
                        Изменить
                    </a>

                    if ((Model.CurrentVersion > Model.PublishedVersion || Model.PublishedVersion == null))
                    {
                        if (Model.HasEditAccess)
                        {
                          if (string.IsNullOrWhiteSpace(Model.TodoField) && Model.TargetsForDisplay.Any())
                          {
                              <button type="button"
                                      class="btn btn-success btn-sm"
                                      data-toggle="modal"
                                      data-target="#publishElementModal"
                                      data-element="@Model.PlotElementId"
                                      data-version="@Model.CurrentVersion">
                                  <span class="glyphicon glyphicon-share-alt"></span>
                                  Опубликовать
                              </button>
                          }
                          else
                          {
                              <button type="button"
                                      class="btn btn-success btn-sm disabled"
                                      disabled="disabled"
                                      title="Невозможно опубликовать вводную. Убедитесь что: Все TODO закрыты и поле очищено; вводная привязана к чему-то.">
                                  <span class="glyphicon glyphicon-share-alt"></span>
                                  Опубликовать
                              </button>
                          }
                        }
                        else
                        {
                            <button type="button"
                                    class="btn btn-success btn-sm disabled"
                                    disabled="disabled"
                                    title="У вас должны быть права редактора сюжетов для этого">
                                <span class="glyphicon glyphicon-share-alt"></span>
                                Опубликовать
                            </button>
                        }
                    }

                    if (Model.PublishedVersion != null && Model.HasEditAccess && Model.Status != PlotStatus.Deleted)
                    {
                        <button type="button"
                                class="btn btn-info btn-sm"
                                data-toggle="modal"
                                data-target="#unpublishElementModal" data-element="@Model.PlotElementIdentification"
                                title="Скрыть опубликованную версию от игроков">
                            <span class="glyphicon glyphicon-remove-sign"></span>
                            Скрыть
                        </button>
                    }

                    if (Model.HasEditAccess && Model.Status == PlotStatus.Deleted)
                    {
                        <button type="button"
                                class="btn btn-success btn-sm"
                                data-toggle="modal"
                                data-target="#restoreElementModal" data-element="@Model.PlotElementId"
                                title="Восстановить удаленную вводную">
                            Восстановить
                        </button>
                    }

                    if (Model.Status != PlotStatus.Deleted && Model.HasEditAccess)
                    {
                        <button type="button"
                                class="btn btn-danger btn-sm"
                                data-toggle="modal" data-target="#deleteElementModal"
                                data-element="@Model.PlotElementId">
                            <span class="glyphicon glyphicon-trash"></span>
                            Удалить
                        </button>
                    }
                }
                if (Model.NextModifiedDateTime != null)
                {

                    <a href="@Url.Action("ShowElementVersion", new {Model.ProjectId, Model.PlotFolderId, Model.PlotElementId, Version = Model.CurrentVersion + 1})"
                       class="btn btn-default btn-sm"
                       title="Следующая версия">
                        @Html.DisplayFor(model => model.NextModifiedDateTime)
                        <span class="glyphicon glyphicon-forward"></span>
                    </a>
                }
                <hr />
                if (!string.IsNullOrWhiteSpace(Model.TodoField))
                {
                    <p><b style="color: orange">TODO:</b> @Model.TodoField</p>
                }
            }

            @{
                var hideClassName = Model.ThisPublished ? "" : "world-object-hidden";
            }
            <div class="@hideClassName">
                @Model.Content
                @if (string.IsNullOrWhiteSpace(Model.Content.ToHtmlString()))
                {
                    <i>Вводная пуста</i>
                }
            </div>
        </div>
    </div>
</div>
