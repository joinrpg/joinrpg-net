@using System.Diagnostics
@using JoinRpg.DataModel
@using JoinRpg.Domain.Problems
@using JoinRpg.PrimitiveTypes.ProjectMetadata
@using JoinRpg.Web.Models.Characters
@model CharacterListViewModel
@{
  ViewBag.CountString = Html.DisplayCount_OfX(Model.Items.Count(), "персонаж", "персонажа", "персонажей");
}

@await Html.PartialAsync("_ListOperationsDropdown", Model)

@{
    var firstItem = Model.Items.FirstOrDefault();
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => firstItem!.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => firstItem!.Player)
        </th>
        @if (Model.Items.Any(x => x.Groups.HasAnyGroups))
        {
            <th>
                @Html.DisplayNameFor(model => firstItem!.Groups)
            </th>
        }

        <th>@Html.DisplayNameFor(model => firstItem!.Problems)</th>
        @foreach (var field in Model.Fields.Where(f => !f.IsName))
        {
          if (!field.CanHaveValue)
          {
                <th>&nbsp;</th>
          }
          else if (field.IsMultiLine)
          {
              continue;
          }
          else
          {
              <th>@field.Name</th>
          }
        }

    </tr>

    @foreach (var item in Model.Items.OrderBy(c => c.BusyStatus).ThenBy(c => c.Name))
    {
        <tr>
            <td>
                <a href="@Url.Action(Model.HasEditAccess ? "Edit" : "Details", "Character", new {Model.ProjectId, item.CharacterId}, null)">
                    @item.Name
                </a>
            </td>
            <td>
                @if (item.Player is not null)
                {
                   <text>
                    @Html.DisplayFor(modelItem => item.Player) (@Html.ActionLink("заявка", "Edit", "Claim", new { Model.ProjectId, ClaimId = item.ApprovedClaimId }, null))
                   </text>
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.BusyStatus)
                    if (item.BusyStatus == CharacterBusyStatusView.Slot)
                    {
                        if (item.SlotCount is not null)
                        {
                            <text> (@item.SlotCount)</text>
                        }
                        else
                        {
                            <text> (∞)</text>
                        }
                    }
                }
            </td>
            @if (Model.Items.Any(x => x.Groups.HasAnyGroups))
            {
                <td>
                    @Html.DisplayFor(model => item.Groups)
              </td>
            }
            <td>
                @foreach (var pr in item.Problems)
                {
                  @Html.DisplayFor(model => pr)
                }
            </td>

            @foreach (var field in Model.Fields.Where(f => !f.IsName))
            {
                var fieldValueViewModel = item.Fields.SingleOrDefault(f => f.Field.Id.ProjectFieldId == field.Id.ProjectFieldId);
                if (!field.CanHaveValue)
                {
                    <td>*</td>
                }
                else if (field.IsMultiLine)
                {
                    continue;
                }
                else
                {
                    <td>
                        @if (fieldValueViewModel != null)
                        {
                            @fieldValueViewModel.DisplayString
                        }
                    </td>
                }
            }
        </tr>
    }
</table>
