
@model JoinRpg.Web.Models.EditUserProfileViewModel

@{
    ViewBag.Title = "Редактирование профиля";
}

<h2>Профиль</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.UserId)
    @Html.HiddenFor(m => m.LastClaimId)
    @Html.HiddenFor(m => m.LastClaimProjectId)


<div class="form-horizontal">
    @if (Model.LastClaimId != null)
    {
        <div class="alert alert-info">
            <h3>Поздравляем! Ваша заявка отправлена мастерам!</h3>
            Удостоверьтесь что ваши контакты актуальны, чтобы мастерам было легче с вами связаться или найти вас.
            Ваш телефон, email и skype будут видны только мастерам игр, на которые вы заявились.
        </div>
    }
    else
    {
        <p>
            Удостоверьтесь что ваши контакты актуальны, чтобы мастерам было легче с вами связаться или найти вас.
            Ваш телефон, email и skype будут видны только мастерам игр, на которые вы заявились.
        </p>
    }
    <p>Загрузить аватарку пока можно при помощи сервиса <a href="https://ru.gravatar.com/">GrAvatar</a> (@Html.HelpLink("register/index.html#id4", "инструкция")).</p>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @if (Model.IsVerifiedFlag)
    {
        <div class="alert alert-success">
            Ваш профиль подтвержден администраторами. Если вы хотите изменить свое ФИО или телефон, обращайтесь в техподдержку.
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.BornName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            @if (Model.IsVerifiedFlag)
            {
                @Html.EditorFor(model => model.BornName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            }
            else
            {
                @Html.EditorFor(model => model.BornName, new { htmlAttributes = new { @class = "form-control" } })
            }
            @Html.ValidationMessageFor(model => model.BornName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            @if (Model.IsVerifiedFlag)
            {
                @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            }
            else
            {
                @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
            }
            @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SurName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            @if (Model.IsVerifiedFlag)
            {
                @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            }
            else
            {
                @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "form-control" } })
            }
            @Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PrefferedName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.PrefferedName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DescriptionFor(model => model.PrefferedName)
            @Html.ValidationMessageFor(model => model.PrefferedName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            @if (Model.IsVerifiedFlag)
            {
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            }
            else
            {
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            }
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Skype, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.Skype, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Skype, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Livejournal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            <div class="input-group">
                @Html.EditorFor(model => model.Livejournal, new { htmlAttributes = new { @class = "form-control" } })
                <span class="input-group-addon">.livejournal.com</span>
            </div>
            @Html.ValidationMessageFor(model => model.Livejournal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Vk, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            <div class="input-group">
                <span class="input-group-addon">https://vk.com/</span>
                @Html.EditorFor(model => model.Vk, new { htmlAttributes = new { @class = "form-control" } })

            </div>
            @Html.DescriptionFor(model => model.Vk)
            @Html.ValidationMessageFor(model => model.Vk, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Telegram, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            <div class="input-group">
                <span class="input-group-addon">https://t.me/</span>
                @Html.EditorFor(model => model.Telegram, new { htmlAttributes = new { @class = "form-control" } })

            </div>
            @Html.DescriptionFor(model => model.Telegram)
            @Html.ValidationMessageFor(model => model.Telegram, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Nicknames, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.Nicknames, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DescriptionFor(model => model.Nicknames)
            @Html.ValidationMessageFor(model => model.Nicknames, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GroupNames, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.GroupNames, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DescriptionFor(model => model.GroupNames)
            @Html.ValidationMessageFor(model => model.GroupNames, "", new { @class = "text-danger" })
        </div>
    </div>

    @*     <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-7">
            <input type="submit" value="@(Model.LastClaimId  == null ? "Сохранить" : "Сохранить и перейти к заявке")" class="btn btn-success" />
        </div>
    </div>
</div>
}


