@using JoinRpg.CommonUI.Models
@using JoinRpg.Domain
@using JoinRpg.PrimitiveTypes
@using JoinRpg.Web.Claims
@model JoinRpg.Web.Models.AddClaimViewModel

<script src="~/Scripts/claim.js">

</script>

@{
    ViewBag.Title = "Новая заявка на игру «" + Model.ProjectName + "»";
}

<h2>@ViewBag.Title</h2>


<form asp-controller="Claim" asp-action="add" method="post" asp-route-ProjectId="@Model.ProjectId">
    @Html.HiddenFor(model => model.ProjectId)

    <div class="form-horizontal">

        @foreach (var validation in Model.ValidationStatus)
        {
            <component type="typeof(AddClaimForbideReasonMessage)"
                       render-mode="Static"
                       param-Reason="validation"
                       param-ProjectId="Model.ProjectIdentification"
                       param-CharacterName="Model.TargetName"
                       param-ProjectLifecycleStatus="Model.ProjectLifecycleStatus" />
        }

        @if (Model.IsProjectRelatedReason)
        {
            return;
        }

        @if (Model.WarnForAnotherClaim && Model.CanSendClaim())
        {
            if (Model.ProjectAllowsMultipleCharacters)
            {
                <div class="alert alert-info">
                    У вас уже есть <my-claim-link asp-for="@Model">заявка</my-claim-link> на проект. На этот проект может быть утверждено несколько заявок.
                </div>
            }
            else
            {
                <div class="alert alert-warning">
                    У вас уже есть <my-claim-link asp-for="@Model">заявка</my-claim-link> на проект. Утверждена может быть только одна заявка.
                </div>
            }
        }

        @if (Model.HasMasterAccess)
        {
            <div class="alert alert-info">
                Несмотря на то, что у вас есть мастерские права, форма заявки показывается так, как ее видят игроки (мастерские поля не видны).
            </div>
        }

        @if (Model.ClaimApplyRules != null)
        {
            <div>
              @Model.ClaimApplyRules
              <hr />
            </div>
        }

        @if (Model.IsSlot)
        {
          @* Показываем имя для шаблонов, и только для них. Для всех остальных это просто будет обычное поле в списке полей *@
            <div class="form-group">
                @Html.LabelFor(model => model.TargetName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.TargetName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        }

        @if (Model.CanSendClaim())
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @await Html.PartialAsync("_EditFieldsPartial", Model.Fields)

            if (Model.Fields.Fields.Any(f => f.HasPrice))
            {
                @await Html.PartialAsync("_ClaimFieldsSubtotal", 0)
            }

            <div class="form-group">
                @Html.LabelFor(model => model.ClaimText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClaimText, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClaimText, "", new { @class = "text-danger" })
                    @Html.DescriptionFor(model => model.ClaimText)
                </div>
            </div>

            @if (Model.SenstiveDataRequired)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.SensitiveDataAllowed, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(model => model.SensitiveDataAllowed, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SensitiveDataAllowed, "", new { @class = "text-danger" })
                        @Html.DescriptionFor(model => model.SensitiveDataAllowed)
                    </div>
                </div>
            }

            @Html.HiddenFor(model => model.CharacterId)

            <p>
              При отправке заявки мастера получат доступ к вашим контактам (<a href="/privacy">подробности об обработке персональных данных</a>).
            </p>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Отправить заявку" class="btn btn-success" />
                </div>
            </div>
        }
    </div>
</form>
