@using JoinRpg.PrimitiveTypes
@using JoinRpg.Web.ProjectMasterTools.Settings

@model JoinRpg.Web.Models.EditProjectViewModel

@{
    ViewBag.Title = "Игра «" + Model.OriginalName + "»: Настройки";
}

<h2>@ViewBag.Title</h2>

<component type="typeof(JoinRpg.Web.ProjectMasterTools.Settings.SettingsButtons)" render-mode="Static"
param-ProjectId="new ProjectIdentification (Model.ProjectId)"
param-Active="Model.Active" />
<hr/>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProjectId)

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectAnnounce, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjectAnnounce, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectAnnounce, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClaimApplyRules, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClaimApplyRules, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClaimApplyRules, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.Active)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.IsAcceptingClaims, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-1">
                    @Html.EditorFor(model => model.IsAcceptingClaims)
                    @Html.ValidationMessageFor(model => model.IsAcceptingClaims, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StrictlyOneCharacter, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StrictlyOneCharacter)
                    @Html.ValidationMessageFor(model => model.StrictlyOneCharacter, "", new { @class = "text-danger" })
                    @Html.DescriptionFor(model => model.StrictlyOneCharacter)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AutoAcceptClaims, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AutoAcceptClaims)
                    @Html.ValidationMessageFor(model => model.AutoAcceptClaims, "", new { @class = "text-danger" })
                    @Html.DescriptionFor(model => model.AutoAcceptClaims)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DefaultTemplateCharacterId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <component type="typeof(JoinRpg.Web.ProjectCommon.SingleCharacterSelector)"
                    param-ProjectId="Model.ProjectId"
                    param-Name="@("DefaultTemplateCharacterId")"
                    param-SelectedCharacterId="@(Model.DefaultTemplateCharacterId)"
                    param-TemplateOnly="true"
                    param-AllowEmpty="true"
                    render-mode="WebAssemblyPrerendered" />
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.EnableAccomodation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EnableAccomodation)
                    @Html.ValidationMessageFor(model => model.EnableAccomodation, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-success" />
            </div>
        </div>
    </div>
}


<component type="typeof(JoinRpg.Web.ProjectMasterTools.Settings.ProjectPublishSettingsPanel)" render-mode="WebAssembly"
           param-ProjectId="new ProjectIdentification (Model.ProjectId)" />
@section Scripts {
    <script src="/_framework/blazor.webassembly.js"></script>
    <script src="_content/Microsoft.AspNetCore.Components.WebAssembly.Authentication/AuthenticationService.js"></script>

}
