@using System.ComponentModel

@using JoinRpg.Web.Models
@model FieldValueViewModel

@{ var hideClassName = !Model.IsPlayerVisible ? "world-object-hidden" : ""; }

  @if (Model.FieldViewType == ProjectFieldViewType.Header)
  {
      <h4 class="@hideClassName">@Model.FieldName</h4>
      if (!Model.Description.IsNullOrWhiteSpace())
      {
          <div class="help-block @hideClassName">
              @Model.Description
          </div>
      }

      if (!Model.MasterDescription.IsNullOrWhiteSpace() && Model.HasMasterAccess)
      {
          <div class="help-block world-object-hidden">
              @Model.MasterDescription
          </div>
      }
      return;
  }

<div class="form-group @hideClassName">
    <label class="control-label col-md-2">@Model.FieldName</label>
    <div class="col-md-8">
        @*TODO: May be also set client id here*@
        @switch (Model.FieldViewType)
              {
                case ProjectFieldViewType.Dropdown:
                case ProjectFieldViewType.MultiSelect:
                case ProjectFieldViewType.ScheduleRoomField:
                case ProjectFieldViewType.ScheduleTimeSlotField:
                  if (Model.ShowPrice && string.IsNullOrWhiteSpace(Model.Value))
                  {
                    <div class="form-control-complex">
                        <div class="form-control-1-4">( ничего не выбрано )</div>
                        <div class="form-control-2-4"></div>
                        <div class="form-control-4-4 price-table"></div>
                    </div>
                }
                foreach (var value in Model.ValueList)
                {
                    <div class="form-control-complex">
                    <div class="form-control-1-4">@if (Model.HasMasterAccess && value.SpecialGroupId != null)
          {
            @Html.ActionLink(value.Label, "Details", "GameGroups", new {Model.ProjectId, CharacterGroupId = value.SpecialGroupId}, null)
            <text>&nbsp;</text>
                    }
                    else
                    {
                        @value.Label
        }
                    </div>
                    <div class="form-control-2-4">
                        @value.DescriptionHtml

                        @if (!value.MasterDescriptionHtml.IsNullOrWhiteSpace() && Model.HasMasterAccess)
        {
                        <div class="help-block world-object-hidden">@value.MasterDescriptionHtml</div>
                        }
                    </div>
                    @if (Model.ShowPrice)
        {
                        <div class="form-control-4-4 price-table"><strong>Цена:</strong> @Html.RenderPriceElement(value.Price)</div>
                    }                    
                    </div>
                }
                break;
            case ProjectFieldViewType.Checkbox:
                <div class="form-control-complex">
                    <label for="@Model.FieldClientId" class="form-control-left">
                        <span type="checkbox" class="glyphicon glyphicon-@(Model.IsCheckboxSet() ? "check" : "unchecked")" @(Model.HasPrice ? "price=" + Model.Price.ToString() : "")></span>
                        @Model.Description
                    </label>
                    @if (Model.ShowPrice)
                    {
                        <span class="form-control-right price-base">Цена: @Html.RenderPriceElement(Model.Price, Model.FieldClientId + "_baseprice")</span>
                    }
                </div>
                break;
            case ProjectFieldViewType.Number:
                <div class="form-control-complex">
                    <div class="form-control-left">@Model.DisplayString</div>
                    @if (Model.ShowPrice)
                    {
                        <span class="form-control-right price-base">Цена за 1 единицу измерения: @Html.RenderPriceElement(Model.Price, Model.FieldClientId + "_baseprice")</span>
                    }
                </div>
                break;
            case ProjectFieldViewType.String:
            case ProjectFieldViewType.Text:
            case ProjectFieldViewType.Login:
            case ProjectFieldViewType.PinCode:
                @Model.DisplayString
                break;
            case ProjectFieldViewType.Header:
            default:
                throw new InvalidEnumArgumentException();
        }
        @if (Model.FieldViewType != ProjectFieldViewType.Checkbox)
        {
            if (!Model.Description.IsNullOrWhiteSpace())
            {
                <div class="help-block @hideClassName">
                    @Model.Description
                </div>
            }

            if (!Model.MasterDescription.IsNullOrWhiteSpace() && Model.HasMasterAccess)
            {
                <div class="help-block world-object-hidden">
                    @Model.MasterDescription
                </div>
            }
        }
    </div>
    <div class="col-md-2 price-table">
        @if (Model.ShowPrice)
        {
            @Html.RenderPriceElement(Model.Fee, Model.FieldClientId + "_disp");
        }
    </div>
</div>
