@model JoinRpg.Web.Models.CharacterGroups.CharacterGroupDetailsViewModel

@functions

{

    public static string CountOfX(int count, string single, string multi1, string multi2)
    {
        var selected = count == 0 ? multi2 : (count == 1 ? single : (count < 5 ? multi1 : multi2));
        return count + " " + @selected;
    }

}

@if (!Model.IsPublic && !Model.HasMasterAccess)
{
    <p>Группа не существует, удалена или скрыта.</p>
    return;
}
@{
    ViewBag.Title = "Группа персонажей " + Model.Name;
}

@Html.DisplayFor(model => model)

@{
    {
        var hideClassName = !Model.IsPublic ? "world-object-hidden" : "";
        <div class="@hideClassName panel panel-default">
            @if (Model.HasMasterAccess)
            {
                <div class="panel-heading">
                    <div class="btn-group" role="group">

                        @if (!Model.IsSpecial && Model.ShowEditControls && !Model.IsRootGroup)
                        {
                            <a type="button" class="btn btn-default" href="@Url.Action("Edit", "GameGroups", new {Model.ProjectId, Model.CharacterGroupId}, null)">
                                <span title="настроить" class="glyphicon glyphicon-wrench"></span> настроить
                            </a>
                        }
                        <a type="button" class="btn btn-default" asp-controller="GameSubscribe" asp-action="EditForGroup" asp-route-projectId="@Model.ProjectId" asp-route-characterGroupId="@Model.CharacterGroupId" >
                            <span class="glyphicon glyphicon-pushpin"></span> подписка
                        </a>

                        @if (!Model.IsRootGroup && !Model.IsSpecial && Model.ShowEditControls)
                        {
                            var uri = Url.Action("Delete", "GameGroups", new { Model.ProjectId, Model.CharacterGroupId }, null);
                            <a href="@uri" type="button" class="btn btn-default">
                                <span title="удалить" class="glyphicon glyphicon-trash"></span> удалить
                            </a>
                        }


                        @if (!Model.IsSpecial && Model.ShowEditControls)
                        {
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Добавить...
                                    <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a href="@Url.Action("Create", "Character", new {Model.ProjectId, Model.CharacterGroupId}, null)">..персонажа</a></li>
                                    <li>@Html.ActionLink("..подгруппу", "AddGroup", "GameGroups", new { Model.ProjectId, Model.CharacterGroupId }, null)</li>
                                </ul>
                            </div>
                        }

                    </div>
                    @await Html.PartialAsync("CreateUpdated", Model)
                </div>
            }

            <div class="panel-body">
                @Model.Description
            </div>
        </div>
    }
}
