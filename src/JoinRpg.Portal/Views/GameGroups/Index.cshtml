@using JoinRpg.Web.Models
@model GameRolesViewModel

@if (!Model.Data.Any())
{
    <p>Группа не существует, удалена или скрыта.</p>
    return;
}

@{
    ViewBag.Title = "Сетка ролей " + Model.ProjectName + ": " + Model.Data.Single(g => g.DeepLevel == 0).Name;
    ViewData["ShowEditControls"] = Model.ShowEditControls;
}
@Html.DisplayFor(model => model.Details)
@foreach (var item in Model.Data)
{
    var hideClassName = !item.IsPublic ? "world-object-hidden" : "";
    <div style="margin-left: @(item.DeepLevel)em" class="@hideClassName">
            @{
                var groupLink = Html.ActionLink(item.Name, "Details", new {Model.ProjectId, item.CharacterGroupId}, null);
                var pathString = string.Join("→", item.Path.Skip(1).Select(p => p.Name)) + "→" + item.Name;
            }
            <div>@switch (item.DeepLevel)
                 {
                     case 2:
                         <span class="h3" title="@pathString">@groupLink</span>
                         break;
                     case 1:
                         <span class="h2" title="@pathString">@groupLink</span>
                         break;
                     case 0:
                         break;
                     default:
                         <span class="h4" title="@pathString">@groupLink</span>
                         break;
                 }
            @if (item.DeepLevel != 0 && Model.HasMasterAccess)
            {
                <partial name="_GroupEditControls" model="item" />
            }
            @if (item.IsSpecial)
            {
                <span class="label label-default" title="Эта группа автоматически заполняется в зависимости от полей персонажа. @item.BoundExpression">Спецгруппа</span>
            }
            </div>

    @if (!item.FirstCopy)
    {
        <span>см. выше</span>
    }

            @if (item.FirstCopy)
            {
            <div>
                @item.Description
                <ul>
                    @foreach (var character in item.ActiveCharacters)
                    {
                        <li>
                            @await Html.PartialAsync("_CharacterPartial", character)
                        </li>
                    }
                </ul>
            </div>
            }
        </div>
    }
