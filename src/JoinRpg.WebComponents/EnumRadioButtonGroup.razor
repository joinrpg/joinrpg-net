@typeparam TValue where TValue:struct, Enum
@foreach (var enumValue in Enum.GetValues<TValue>())
{
  <div>
    <label>
      <input type="radio" value="@enumValue" checked="@(enumValue.Equals(SelectedValue))" @onchange="UpdateSelected" name="@Name" />
      &nbsp;@enumValue.GetDisplayName()
    </label>
    @if (enumValue.GetDescription() is string description)
    {
      <div class="help-block">@description</div>
    }
  </div>
}

@code {
    [Parameter]
    public TValue SelectedValue { get; set; } = default(TValue)!;

    [Parameter]
    public EventCallback<TValue> SelectedValueChanged { get; set; }

    [Parameter]
    public string Name { get; set; } = null!;

    private async Task UpdateSelected(ChangeEventArgs eventArgs)
    {
      await SelectedValueChanged.InvokeAsync(Enum.Parse<TValue>(eventArgs.Value!.ToString ()!));
    }
}
